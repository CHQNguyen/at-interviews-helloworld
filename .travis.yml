sudo: required

language: generic

services:
- docker
env:
  global:
  - secure: travisEncryptedAWS_ACCOUNT_ID # ENV save in travis CI ENV Var
  - secure: travisEncryptedAWS_ACCESS_KEY_ID # ENV save in travis CI ENV Var
  - secure: travisEncryptedAWS_SECRET_ACCESS_KEY # ENV save in travis CI ENV Var

before_install:
  - pip install --user awscli # install aws cli w/o sudo
  - export PATH=$PATH:$HOME/.local/bin # put aws in the path
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl # give user access to kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl # move kubectl path to usr/local/bin
  - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 # install helm
  - chmod 700 get_helm.sh # give access to user to run script
  - ./get_helm.sh # run script install helm

script:
  - export COMMIT_ID=$(git rev-parse --verify --short HEAD)
  - docker build --no-cache --build-arg GIT_COMMIT=$COMMIT_ID -t helloworld:$COMMIT_ID -t 310228935478.dkr.ecr.us-west-2.amazonaws.com/helloworld:$COMMIT_ID .

deploy: # used deploy to split deployment base off release(Prod Branch) or UAT(Test Branch)
  provider: script
  script: bash deploy.sh # used the provide local-deploy script as a base for deploy
  on:
    branch: main # deploy when new code is push to main branch
#   provider: script
#   script: bash deploy-prod.sh # will run this script with new code is push to release branch
#   on:
#     branch: release # deploy when new code is push to release branch

after_deploy: # used print out URL for hello world site
  - kubectl --namespace travis get ingress
  - kubectl --namespace travis describe ingress helloworld
